angular.module("ui.multiselect",["multiselect.tpl.html"]).factory("optionParser",["$parse",function(e){var n=/^\s*(.*?)(?:\s+as\s+(.*?))?\s+for\s+(?:([\$\w][\$\w\d]*))\s+in\s+(.*)$/;return{parse:function(t){var l=t.match(n);if(!l)throw new Error("Expected typeahead specification in form of '_modelValue_ (as _label_)? for _item_ in _collection_' but got '"+t+"'.");return{itemName:l[3],source:e(l[4]),viewMapper:e(l[2]||l[1]),modelMapper:e(l[1])}}}}]).directive("multiselect",["$parse","$document","$compile","$interpolate","optionParser",function(e,n,t,l,c){return{restrict:"E",require:"ngModel",link:function(n,i,a,r){function u(){v.items.length=0;var e=g.source(n);if(angular.isDefined(e))for(var t=0;t<e.length;t++){var l={};l[g.itemName]=e[t],v.items.push({label:g.viewMapper(l),model:e[t],checked:!1})}}function o(){if(s(r.$modelValue))return v.header=a.msHeader||"Select";if(k)v.header=a.msSelected?l(a.msSelected)(v):r.$modelValue.length+" selected";else{var e={};e[g.itemName]=r.$modelValue,v.header=g.viewMapper(e)}}function s(e){if(!e)return!0;if(e.length&&e.length>0)return!1;for(var n in e)if(e[n])return!1;return!0}function d(e){e.checked?v.uncheckAll():(v.uncheckAll(),e.checked=!e.checked),p(!1)}function f(e){e.checked=!e.checked,p(!0)}function p(e){var n;e?(n=[],angular.forEach(v.items,function(e){e.checked&&n.push(e.model)})):angular.forEach(v.items,function(e){return e.checked?(n=e.model,!1):void 0}),r.$setViewValue(n)}function h(e){angular.isArray(e)?angular.forEach(v.items,function(n){n.checked=!1,angular.forEach(e,function(e){angular.equals(n.model,e)&&(n.checked=!0)})}):angular.forEach(v.items,function(n){return angular.equals(n.model,e)?(n.checked=!0,!1):void 0})}var m=a.options,g=c.parse(m),k=a.multiple?!0:!1,b=!1,v=n.$new(),$=a.change||angular.noop;v.items=[],v.header="Select",v.multiple=k,v.disabled=!1,n.$on("$destroy",function(){v.$destroy()});var y=angular.element("<multiselect-popup></multiselect-popup>");(a.required||a.ngRequired)&&(b=!0),a.$observe("required",function(e){b=e}),v.$watch(function(){return e(a.disabled)(n)},function(e){v.disabled=e}),v.$watch(function(){return e(a.multiple)(n)},function(e){k=e||!1}),v.$watch(function(){return g.source(n)},function(e){angular.isDefined(e)&&u()},!0),v.$watch(function(){return r.$modelValue},function(e){angular.isDefined(e)&&(h(e),v.$eval($)),o(),r.$setValidity("required",v.valid())},!0),u(),i.append(t(y)(v)),v.valid=function(){if(!b)return!0;var e=r.$modelValue;return angular.isArray(e)&&e.length>0||!angular.isArray(e)&&null!=e},v.checkAll=function(){k&&(angular.forEach(v.items,function(e){e.checked=!0}),p(!0))},v.uncheckAll=function(){angular.forEach(v.items,function(e){e.checked=!1}),p(!0)},v.select=function(e){k===!1?(d(e),v.toggleSelect()):f(e)}}}}]).directive("multiselectPopup",["$document",function(e){return{restrict:"E",scope:!1,replace:!0,templateUrl:"multiselect.tpl.html",link:function(n,t){function l(i){c(i.target,t.find(i.target.tagName))||(t.removeClass("open"),e.unbind("click",l),n.$apply())}n.isVisible=!1,n.toggleSelect=function(){t.hasClass("open")?(t.removeClass("open"),e.unbind("click",l)):(t.addClass("open"),e.bind("click",l),n.focus())},n.focus=function(){var e=t.find("input")[0];e.focus()};var c=function(e,n){for(var t=0;t<n.length;t++)if(e==n[t])return!0;return!1}}}}]),angular.module("multiselect.tpl.html",[]).run(["$templateCache",function(e){e.put("multiselect.tpl.html",'<div class="btn-group">\n  <button type="button" class="btn btn-default dropdown-toggle" ng-click="toggleSelect()" ng-disabled="disabled" ng-class="{\'error\': !valid()}">\n    {{header}} <span class="caret"></span>\n  </button>\n  <ul class="dropdown-menu">\n    <li>\n      <input class="form-control input-sm" type="text" ng-model="searchText.label" autofocus="autofocus" placeholder="Filter" />\n    </li>\n    <li ng-show="multiple" role="presentation" class="">\n      <button class="btn btn-link btn-xs" ng-click="checkAll()" type="button"><i class="glyphicon glyphicon-ok"></i> Check all</button>\n      <button class="btn btn-link btn-xs" ng-click="uncheckAll()" type="button"><i class="glyphicon glyphicon-remove"></i> Uncheck all</button>\n    </li>\n    <li ng-repeat="i in items | filter:searchText">\n      <a ng-click="select(i); focus()">\n        <i class="glyphicon" ng-class="{\'glyphicon-ok\': i.checked, \'empty\': !i.checked}"></i> {{i.label}}</a>\n    </li>\n  </ul>\n</div>')}]);